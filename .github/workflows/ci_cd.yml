name: CD pipeline

# This pipeline
# - builds and pushes the component's images
# - updates the app manifests with the tags of the new images
#
# A couple of simplifications are used that should not be used in
# real environments:
# - Pipeline build number is used as image tag, which couples versioning to the CI
# - All component's use the same version, which usually won't happen with microservices

on:
  push:
    branches:
      - master
    paths:
      - 'src/**' # only changes to source code trigger the pipeline
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      IMAGE_TAG: 0.${{ github.run_number }}

    outputs:
      image_tag: ${{ env.IMAGE_TAG }}

    defaults:
      run:
        shell: bash
        working-directory: ./src

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push web-ui image
        run: ./build_push.sh web-ui

      - name: Build and push weather-service image
        run: ./build_push.sh weather-service

      - name: Build and push temp-conversion-service image
        run: ./build_push.sh temp-conversion-service

  update-manifests:
    needs: build-and-push
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push to the repository.
      contents: write

    env:
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      IMAGE_TAG: ${{ needs.build-and-push.outputs.image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update deployments
        run: |
          set -euo pipefail
          for dir in k8s/*/; do
            component=$(basename ${dir})
            sed -i "s|\(image: ${DOCKER_USER}/${component}\):.*|\1:${IMAGE_TAG}|" \
              k8s/${component}/deployment.yaml
          done

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
